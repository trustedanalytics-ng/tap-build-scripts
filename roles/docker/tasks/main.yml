###########################################################################
# Copyright (c) 2016 Intel Corporation                                    #
#                                                                         #
# Licensed under the Apache License, Version 2.0 (the "License");         #
# you may not use this file except in compliance with the License.        #
# You may obtain a copy of the License at                                 #
#                                                                         #
#    http://www.apache.org/licenses/LICENSE-2.0                           #
#                                                                         #
# Unless required by applicable law or agreed to in writing, software     #
# distributed under the License is distributed on an "AS IS" BASIS,       #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.#
# See the License for the specific language governing permissions and     #
# limitations under the License.                                          #
###########################################################################

---

- name: stop existing docker engine
  service:
    name: docker
    state: stopped
  register: command_result
  failed_when: "{{ 'failed' in command_result and 'systemd could not find the requested service' not in command_result.msg }}"

- name: add docker repository
  yum_repository:
    name: docker
    description: Docker Repository
    ip_resolve: 4
    baseurl: "{{ yum_repo_baseurl }}"
    gpgcheck: yes
    gpgkey: "{{ yum_repo_gpgkey }}"
    retries: 10
    state: present
  when: "{{ 'state' not in command_result }}"

- name: install docker packages
  yum:
    name: docker-engine
    state: present
    update_cache: yes
  when: "{{ 'state' not in command_result }}"

- name: stop newly installed docker
  service:
    name: docker
    state: stopped
  when: "{{ 'state' not in command_result }}"

- name: create docker user
  group:
    name: docker
    state: present

- name: add current user to docker group
  user:
    name: "{{ TARGET_REGULAR_USER }}"
    state: present
    groups: docker
    append: yes
    
- name: start docker engine
  service:
    name: docker
    state: started
  
- name: autostart docker engine
  command: chkconfig docker on

